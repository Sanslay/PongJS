<html>
<head>
<script src="/socket.io/socket.io.js"></script>

<script src="http://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="raphael.js"></script>
</head>
<title>
PongJS
</title>
<body>
<script type="text/javascript">

 
/*********************GESTION ADRESSE A CHANGER*******************/

//ADRESSE DU SERVER FIXE A CHANGER
// Configuration de la page web
//var serverAddr = 'http://pongjs.dynamic-dns.net:8080/';
var serverAddr = '192.168.43.13:8080/';

/*********************FIN DE GESTION ADRESSE A CHANGER*******************/
// Configuration du paper Raphael: TAILLE
var pWidth = 800;
var pHeight = 500;

var pWidth1 = 400;//largeur
var pHeight1 = 50;//hauteur

// Configuration des rect Raphael: COULEUR
var p1Color = "#4f23cf";
var p2Color = "#cf2323";
// Configuration des circle Raphael: COULEUR
var ballColor = "#37cf23";
var ballRadius = 20;
//Nombre de joueur initialise
var player = 0;
//***********CREATION FORMULAIRE
var valid=false;

//*******ON VALIDE******//
/**************On crée les images sur le paper Raphael **************/

// Cree le paper
var paper = Raphael(500, 0, pWidth, pHeight);
var rec = paper.rect(0, 0, pWidth, pHeight, 10);
// Cree les carre joueur et les balles
//J1
var p1 = paper.rect(0, pHeight/2 - 50, 20, 100, 5);
p1.attr("fill", p1Color);
//J2
var p2 = paper.rect(pWidth - 20, pHeight/2 - 50, 20, 100, 5);
p2.attr("fill", p2Color);
//BALL
var ball = paper.circle(pWidth/2, pHeight/2, ballRadius);
ball.attr("fill", ballColor);

//On crée le paper du score
var paperText= Raphael(85, 350, pWidth1, pHeight1);
//Bordure
// var rec = paper1.rect(0, 0, pWidth1, pHeight1, 5);
//texte
var texte=paperText.text(140,10,"");
texte.attr('font-size',16);
//On part du principe que l'on a 2 joueur
var players = [p1, p2];



/*******************************/
/******************CONNECTION AU SERVEUR ********************/
// On cree une connection avec le socket à l'adresse
var socket = io.connect(serverAddr);

//Ecoute de message de type connect lorsque on est connecter au server
socket.on('connect', function(){

//On attend le nombre de joueur
socket.on('player-number', function(data) {
	//On recupere le nombre de joueur
	player = data;

	console.log("Vous etes le joueur"+ player);

	var cell, ligne;

	//On crée le html d'info joueur
	var tableau = document.getElementById("idStatutjoueur");
	var nbLignes = tableau.rows.length;
	tableau.deleteRow(-1)
	ligne = tableau.insertRow(-1); 
	cell = ligne.insertCell(0);


	if(player==0)
	{
		cell.innerHTML = "Vous etes le  joueur bleu" ;
		FonctionMenu(tableau);

	}
	if(player==1)
	{
		cell.innerHTML = "Vous etes le joueur rouge" ;
		FonctionMenu(tableau);
	}

	if(player==3)
	{
	cell.innerHTML = "Vous etes un visiteur le jeu et deja en cours" ;

	}
});


//On envoi un message lorsque l'on perd le server
socket.on('disconnect', function(data)
{
	alert("SERVER STOP ");
});

//On envoi un message dans le tchat lorsque le joueur est pret.
socket.on('game_pret', function(data)
{
	var ZoneChat = document.getElementById('chat');
	var LeMessage = document.getElementById('message');

	ZoneChat.add(new Option("Log SERVER:"));
	ZoneChat.add(new Option("Le joueur "+data[1]+" est pret"));
	ZoneChat.add(new Option("Il a choisi une vitesse de "+data[2]));
	ZoneChat.add(new Option("Pour atteindre le score de "+data[3]));
});

//On attend les positions joueur adverse
socket.on('opponents-position', function(data) 
{
	players[(player + 1) % 2].attr("y", data);
});

//Gestion des positions raquette client
socket.on('position-raquette', function(data) 
{
	//Pour le joueur spectateur il recoit la position de chaque raquette 
	if(player==3)
	{
	players[0].attr("y", data[0]);
	players[1].attr("y", data[1]);
	}
});

//On attend les positions de la ball
socket.on('ball-position', function (data) {

// ils seront ecrit directement dans les ball
ball.attr("cx", data.x);
ball.attr("cy", data.y);
});

//Affichage du score.
socket.on('game-score', function (data) {

	var cell, ligne;

	//On crée le html d'info joueur
	var tableau = document.getElementById("idBox");
	var nbLignes = tableau.rows.length;
	if(nbLignes>0)
	{
		tableau.deleteRow(-1)
	}

	ligne = tableau.insertRow(-1); 
	cell = ligne.insertCell(0);
	

	cell.innerHTML = data[2]+" "+data[1]+" - "+data[0]+" "+data[3];
});

//On attend que un joueur ce deconnecte
socket.on('opponent-disconnected', function(data) 
{
	alert("Deconnection du joueur "+data);
	location.reload()
});

//On attend que la ball touche une raquette ou un mur
socket.on('squish', function() 
{
	//On crée l'animation sur la ball
	var anim = Raphael.animation({r: ballRadius}, 500, "bounce");

	ball.attr('r', ballRadius - 5);
	ball.animate(anim);
});
//Affichage des messages tchat
socket.on('chat_reponse', function(data) 
{
	var ZoneChat = document.getElementById('chat');
	var LeMessage = document.getElementById('message');
	ZoneChat.add(new Option(data));
});

socket.on('game_etat', function(data) 
{
	var cell, ligne;

	//On crée le html d'info joueur
	var tableau = document.getElementById("idBoxvitesse");
	var nbLignes = tableau.rows.length;
	if(nbLignes>0)
	{
		tableau.deleteRow(-1)
	}

	//var  newdata=[nameJ1,nameJ2,Vitesse,scoretotal]
	ligne = tableau.insertRow(-1); 
	cell = ligne.insertCell(0);
	cell.innerHTML = data[0]+" vs "+data[1];
	ligne = tableau.insertRow(-1);
	cell = ligne.insertCell(0);
	cell.innerHTML = "La vitesse est de "+parseInt(data[2])*100+"%";
	ligne = tableau.insertRow(-1);
	cell = ligne.insertCell(0);
	cell.innerHTML = "Le score total est de  "+data[3];
	});

socket.on('game-victoire', function(data) 
	{
	console.log("victoire de: "+ data);
	alert("victoire de: "+ data);
	var tableau = document.getElementById("idStatutjoueur");
	if(player!=3)
	{
		FonctionMenu(tableau);
	}

	tableau = document.getElementById("idBoxvitesse");
	
	var nbLignes = tableau.rows.length;
	var i =0;
	while(i!=nbLignes)
		{
		tableau.deleteRow(-1)
		i++;
		}


	});
});

// Mouvement de souris
(function() {
window.onmousemove = handleMouseMove;
function handleMouseMove(event)
{
//Le joueur 3 (spectateur) ne pouvant pas jouers
if(player!=3)
{
event = event || window.event;
//On change que les valeurs de Y au numero defini par data
var y = event.clientY;
var x = event.clientX;

if(y>=(pHeight-100)){
y=pHeight-110;}
//console.log(y);
//console.log(x);
players[player].attr("y", y+3);
socket.emit('player-position', y+3);
}
}
})();

function combo(thelist)
{
	if(player==3)
	{
	alert("Il est impossible pour une visiteur de changer la vitesse");
	}
}
function FonctionMenu(tableau)
{
	ligne = tableau.insertRow(-1);
	cell = ligne.insertCell(0);

	cell.innerHTML = "Name" ;

	//creationinput
	ligne = tableau.insertRow(-1);
	cell = ligne.insertCell(0);
	var input = document.createElement("input" ) ;
			input.type = "text" ;
			input.value = "Maxime" ;
			input.id = "idname" ;
			input.style=	"width:180px;";


			cell.appendChild(input) ;
			
	ligne = tableau.insertRow(-1);
	cell = ligne.insertCell(0);
	
	cell.innerHTML = "Difficulte" ;	
		
		ligne = tableau.insertRow(-1);
	cell = ligne.insertCell(0);
	var combo = document.createElement("select" ) ;
			combo.type = "text" ;
			combo.id = "thelists" ;
			combo.setAttribute("onChange","combo(this)") ;
			cell.appendChild(combo) ;
	var myselect = document.getElementById('thelists');
		myselect.add(new Option("Tres Facile", "0"));
		myselect.add(new Option("Facile", "0"));
		myselect.add(new Option("Moyen", "0"));
		myselect.add(new Option("Difficile", "0"));
		myselect.add(new Option("Tres Difficile", "0"));
			


	ligne = tableau.insertRow(-1);
	cell = ligne.insertCell(0);

	cell.innerHTML = "Score" ;
	//creationinput
	ligne = tableau.insertRow(-1);
	cell = ligne.insertCell(0);


	var comboscore = document.createElement("select" ) ;
			comboscore.type = "text" ;
			comboscore.id = "thelistscore" ;
			comboscore.style=	"width:180px;";
			cell.appendChild(comboscore) ;
	var myselect = document.getElementById('thelistscore');
	var i=1;
	while(i!=15)
	{
		myselect.add(new Option(i, "0"));
		i++;
	}

			
	ligne = tableau.insertRow(-1);
	cell = ligne.insertCell(0);


	//creationbouton
	var button = document.createElement("input" ) ;
			button.type = "button" ;
			button.value = "Pret?" ;
			button.name = "idPret" ;
			button.style=	"width:180px;";
			button.setAttribute("onClick","javascript:Pret();") ;

			cell.appendChild(button) ;	


}
function Pret()
{
	
	var vitesse = thelists.selectedIndex;
	var score=thelistscore.selectedIndex+1;
	data=[player,idname.value,vitesse,score]

	//data=player;

	socket.emit('joueur-pret', data);

	var tableau = document.getElementById("idStatutjoueur");
	var nbLignes = tableau.rows.length;
	var i =0;
	while(i!=nbLignes)
		{
		tableau.deleteRow(-1)
		//document.getElementById("idBox").deleteRow(-1)
		i++;
		}

	titreTchat.innerHTML="Tchat("+data[1]+")";

}
function chat(event)
{
	if ( event.which==13 ) {
		var ZoneChat = document.getElementById('chat');
		var LeMessage = document.getElementById('message');

		data=[player,LeMessage.value]
		LeMessage.value="";
		socket.emit('game_chat', data);

	
	}
}
function Clearchat()
{
	var i=0;
	var ZoneChat = document.getElementById('chat');
	while(i<=ZoneChat.size)
	{
		ZoneChat.remove(0);
		i++;
	}

	
	}



</script>
<h1 style="margin-left: 100px;">Jeu PING PONG</h1>
<h2 style=" margin-left: 100;">Information du jeu</h2>

<button style=" margin-left: 100;" onclick="javascript:location.reload();">Recharger la page</button>

<table id="idBox" style=" margin-left: 100px;">
<tr>
</tr>
</table>
<table id="idBoxvitesse" style=" margin-left: 100px;">
<tr>
</tr>
</table>
<h2 id="titreTchat" style=" margin-left: 1350px;">Tchat</h2>
<select id="chat" size="15" name="tchat"style="width: 220px; border-bottom-style: solid; border-bottom-width: 0px; padding-bottom: 0px; margin-left: 1300px; padding-right: 0px; border-right-style: solid; margin-right: 0px; border-left-style: solid; border-right-width: 0px;">

</select> 
<input onkeypress= "return(chat(event));" id="message" type="text" name="input" value="Enter pour ecrire" style="margin-left: 1320px;">
<button style=" margin-left: 1320px;" onclick="javascript:Clearchat();">Clear tchat</button>
<table id="idStatutjoueur" style="  margin-left: 100px; margin-bottom: 0px;">
<tr>
</tr>
</table>



</body>

</html>
